---
title: "pyobsplot"
---

## Overview

`pyobsplot` allows to use [Observable Plot](https://observablehq.com/@observablehq/plot?collection=@observablehq/plot) to create charts in Jupyter notebooks. Plots are produced as [widgets](https://ipywidgets.readthedocs.io/en/latest/index.html) from Python code with a syntax as close as possible to the JavaScript one.


```{python}
# | include: false

import polars as pl
from pyobsplot import Obsplot, Plot

penguins = pl.read_csv("data/penguins.csv")

op = Obsplot(renderer="jsdom")
```

```{python}
# | eval: false

import polars as pl
from pyobsplot import Obsplot, Plot

penguins = pl.read_csv("data/penguins.csv")

op = Obsplot()
```


```{python}
op(
    {
        "grid": True,
        "marks": [
            Plot.dot(
                penguins, {"x": "flipper_length_mm", "y": "body_mass_g", "fill": "sex"}
            )
        ],
    }
)
```

Or, for [a bit more complex example](https://observablehq.com/@observablehq/plot-facets?collection=@observablehq/plot#cell-148):

```{python}
op(
    {
        "marginLeft": 75,
        "marginRight": 70,
        "x": {"insetRight": 10},
        "y": {"grid": True},
        "facet": {"marginRight": 70},
        "marks": [
            Plot.ruleX([0]),
            Plot.barX(
                penguins,
                Plot.groupY(
                    {"x": "count"}, {"fy": "island", "y": "species", "fill": "sex"}
                ),
            ),
            Plot.text(
                ["The Adelie species is the only one on Torgersen Island."],
                {
                    "fy": ["Torgersen"],
                    "frameAnchor": "right",
                    "lineWidth": 16,
                    "dx": -4,
                },
            ),
        ],
    }
)


```

## Installation and usage


::::{.callout-warning}
This project is at an early stage. There will be bugs, and please take a look at the limitations listed below.
::::

[Getting started](getting_started.qmd) gives installation instructions and a quick usage overview.

[Usage](usage.qmd) gives more detailed usage instructions.

If you just want to try this package without installing it on your computer, you can open an introduction notebook in Google Colab:

[![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/juba/pyobsplot/blob/main/examples/introduction.ipynb)

## Features and limitations

**Features:**

- Syntax as close as possible to the JavaScript one
- Two renderers available: `widget`, which generates plots as Jupyter widgets, and `jsdom`, which generate SVG or HTML outputs
- [Pandas](https://pandas.pydata.org) and [polars](https://pola.rs) DataFrame and Series objects are serialized using [Arrow](https://arrow.apache.org) IPC format for improved speed and data type conversions
- Works offline, no iframe or dependency to Observable runtime
- Caching mechanism of data objects if they are used several times in the same plot
- Custom JavaScript code can be passed as strings with the `js` method
- Python `date` and `datetime` objects are automatically converted to JavaScript `Date` objects
- Plots can be defined with a dictionary, a call to a `Plot` mark function, or with `kwargs`. See [alternative syntaxes](usage.qmd#alternative-syntaxes).
- Works with Jupyter notebooks and Quarto HTML documents. Plots without legends are also supported in PDF and docx outputs with the `jsdom` renderer.

**Limitations:**

- Plots with legends don't work in Quarto in formats other than HTML.
- Some faceting operations produce warnings when used as top-level faceting (but the plots should be fine). This doesn't happen when using mark-level faceting (with the `fx` and `fy` channels).


## Credits

- [Observable Plot](https://observablehq.com/@observablehq/plot?collection=@observablehq/plot), developed by [Mike Bostock](https://observablehq.com/@mbostock) and [Philippe Rivi√®re](https://observablehq.com/@fil) among others.
- The widget is developed thanks to the [anywidget](https://anywidget.dev) framework.
- Some code from the `jsdom` renderer has been adapted from [altair_saver](https://github.com/altair-viz/altair_saver).
- This documentation website is generated by [Quarto](https://quarto.org) and the [bookup](https://github.com/juba/bookup-html) custom format.

